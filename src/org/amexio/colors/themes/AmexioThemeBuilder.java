/**
 * Copyright (c) 2018 MetaMagic Global Inc, NJ, USA

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.

 * This program and the accompanying materials are dual-licensed under
 * either the terms of the Eclipse Public License v1.0 as published by
 * the Eclipse Foundation
 
 *   or (per the licensee's choosing)
 
 * under the terms of the Apache 2 License version 2.0
 * as published by the Apache Software Foundation.
*/
package org.amexio.colors.themes;

import org.amexio.colors.core.Color;
import org.amexio.colors.core.ColorAlgoConstants;
import org.amexio.colors.core.ColorCombinationFactory;
import org.amexio.colors.io.ThemeConfig;

/**
 * Amexio Theme Builder
 * <p>
 * Builds an Amexio Theme based on Multiple Color Choices
 * <p>
 * Following the Are the Color Choice available
 * <p>
 * Build Themes on 
 * 1. ColorDuo (Two Colors)
 * 2. ColorTriadic (Three Colors)
 * 3. 
 * <p>
 * 
 * @author Araf Karsh Hamid
 * @version 1.0
 * @date February 25, 2018
 * @Updated on April 10, 2019
 */
public final class AmexioThemeBuilder {

	public static final String NL = System.getProperty("line.separator");
	
	private AmexioThemeColors themeColor;
	private AmexioAppColors appColor;
	private AmexioComponentColors compColor;
	private ThemeConfig config;
	
	/**
	 * Builds the Complete Themes
	 * @param _theme
	 */

	public AmexioThemeBuilder(ThemeConfig _theme) {
		config = (_theme == null) ? new ThemeConfig() : _theme;
		ColorCombinationFactory ccf = new ColorCombinationFactory(config);
		config.setAutoGeneratedThemeColors(ccf.getThemeColor2().hexStr(), ccf.getThemeColor3().hexStr(),
										   ccf.getThemeColor4().hexStr(), ccf.getThemeColor5().hexStr(), 
										   ccf.getThemeColor6().hexStr());

		themeColor 	= new AmexioThemeColors(ccf);
		appColor 	= new AmexioAppColors(ccf.getAppBGColor(), ccf.getThemeColor1());
		compColor	= new AmexioComponentColors(ccf.getComponentBGColor(), ccf.getThemeColor2());
		
	}
	
	
	/**
	 * Print all the Data for a Theme 
	 * - Header
	 * - CSS Data
	 * - SCSS Data
	 * - Footer 
	 * 
	 * @added on April 10, 2019
	 * @return String
	 */
	public String printAllData() {
		StringBuilder sb = new StringBuilder();
		sb.append(printHeader());
		sb.append(printCSSData());
		sb.append(printSCSSData());
		sb.append(printFooter());
		return sb.toString();
	}
	
	/**
	 * Print CSS3 Vars as JSON Data for Theme Switching
	 * @return
	 */
	public String printJSONData() {
		StringBuilder sb = new StringBuilder();
		sb.append("{").append(NL);
		sb.append("\"metaData\": ").append(config.toJSON()).append(",").append(NL);
		sb.append("\"themeColor\": [").append(NL);
		sb.append(themeColor.printCSSJSON());
		sb.append("],").append(NL);
		sb.append("\"appColor\": [").append(NL);
		sb.append(appColor.printCSSJSON());
		sb.append("],").append(NL);
		sb.append("\"compColor\": [").append(NL);
		sb.append(compColor.printCSSJSON());
		sb.append("]").append(NL);
		sb.append("}").append(NL);
		return sb.toString();
	}
		
	/**
	 * Print the Theme (init) file Header
	 * 
	 * @updated on April 10, 2019
	 * @return
	 */
	public String printHeader() {
		StringBuilder sb = new StringBuilder();
		sb.append(AmexioLicense.COPYRIGHT_SMALL);
		if(config != null) {
			sb.append(NL);
			sb.append("/**").append(NL);
			sb.append("  Theme Details -------------------------------------------------------- ").append(NL);
			sb.append("  Theme Name    : ").append(config.getThemeName()).append(NL);
			sb.append("  Theme Version : ").append(config.getVersion()).append(NL);
			sb.append("  Design Type   : ").append(config.designType()).append(NL);
			sb.append("  Release Date  : ").append(config.getReleaseDate()).append(NL);
			sb.append("  Algo Name     : ").append(ColorAlgoConstants.ALGO_NAMES[config.getColorAlgo()]).append(NL);
			sb.append("  Algo ID       : ").append(config.getColorAlgo()).append(NL);
			sb.append("  Author        : This theme is fully autogenerated by Amexio Colors.").append(NL);
			sb.append("*/").append(NL).append(NL);
		}
		return sb.toString();
	}
	
	/**
	 * Print the Theme (init) file Footer
	 * 
	 * @updated on April 10, 2019
	 * @return
	 */
	public String printFooter() {
		return AmexioLicense.AMEXIO_SUPPORT;
	}
	
	/**
	 * Create the entire SCSS Theme File with CSS Variables
	 * 
	 * @added on April 10, 2019
	 * @return
	 */
	public String printCSSData() {
		StringBuilder sb = new StringBuilder();
		sb.append(":root{").append(NL);
		sb.append("--appTransparency : rgba(0,0,0,0.87);").append(NL);
		sb.append(themeColor.printCSS());
		sb.append(appColor.printCSS());
		sb.append(compColor.printCSS());
		sb.append("}").append(NL);
		return sb.toString();
	}
	
	/**
	 * Create the entire SCSS Theme File
	 * 
	 * @added on April 10, 2019
	 * @return
	 */
	public String printSCSSData() {
		StringBuilder sb = new StringBuilder();
		sb.append("$appTransparency : var(--appTransparency);").append(NL);
		sb.append(themeColor.printSCSS());
		sb.append(appColor.printSCSS());
		sb.append(compColor.printSCSS());
		return sb.toString();
	}
	
	
	/**
	 * This method is deprecated. Please use printAllData() method.
	 * 
	 * Create the entire SCSS Theme File
	 * @return
	 * @deprecated
	 */

	public String printSCSS() {
		StringBuilder sb = new StringBuilder();
		sb.append(AmexioLicense.COPYRIGHT_SMALL);
		if(config != null) {
			sb.append(NL);
			sb.append("/**").append(NL);
			sb.append("  Theme Details -------------------------------------------------------- ").append(NL);
			sb.append("  Theme Name    : ").append(config.getThemeName()).append(NL);
			sb.append("  Theme Version : ").append(config.getVersion()).append(NL);
			sb.append("  Design Type   : ").append(config.designType()).append(NL);
			sb.append("  Author        : This theme is fully autogenerated by Amexio Colors.").append(NL);
			sb.append("*/").append(NL).append(NL);
		}
		// sb.append("$isAmexio: false;").append(NL);
		sb.append("$appTransparency : rgba(0,0,0,0.87);").append(NL);
		sb.append(themeColor.printSCSS());
		sb.append(appColor.printSCSS());
		sb.append(compColor.printSCSS());
		sb.append(AmexioLicense.AMEXIO_SUPPORT);
		return sb.toString();
	}
	
	public static void main(String[] args) {

	}

}
